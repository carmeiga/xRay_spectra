b=theta[m]+1/2
a1=which.min(abs(a-theta))
b1=which.min(abs(b-theta))
tot=a1:b1
yt=y[tot]
tt=theta[tot]
plot(yt~tt)
# code from
# https://stackoverflow.com/questions/25015410/r-find-full-width-at-half-maximum-for-a-gausian-density-distribution
xmax <- tt[yt==max(yt)]
x1 <- tt[tt < xmax][which.min(abs(yt[tt < xmax]-max(yt)/2))]
x2 <- tt[tt > xmax][which.min(abs(yt[tt > xmax]-max(yt)/2))]
points(c(x1, x2), c(yt[tt==x1], yt[tt==x2]), col="red")
fwhms[k]=x2-x1
sigmas=fwhms/2.3548
tab1=data.frame(pea=pea,sigmas=sigmas)
kable(tab1)
}
theta=theta[theta>10]
y=y[theta>10]
p=9
pea=sort(findpeaks(y, npeaks=p, minpeakdistance=100,threshold=0, sortstr=FALSE)[,2])
pea
theta>10
y=nacl$yobs
theta=nacl$X.twotheta/2
trsei=which.min(abs(theta-36.53))
trset=which.min(abs(theta-37.64))
plot(y~theta)
points(y[trsei]~theta[trsei],col='green')
points(y[trset]~theta[trset],col='blue')
#tras executar o script de eliminar kalpha2
y=Mk$yhat
plot(y~theta,type='l')
theta=theta[theta>10]
y=y[theta>10]
plot(y~theta,type='l')
y=nacl$yobs
theta=nacl$X.twotheta/2
trsei=which.min(abs(theta-36.53))
trset=which.min(abs(theta-37.64))
plot(y~theta)
points(y[trsei]~theta[trsei],col='green')
points(y[trset]~theta[trset],col='blue')
#tras executar o script de eliminar kalpha2
y=Mk$yhat
plot(y~theta,type='l')
maiordez=(theta>10)
theta=theta[maiordez]
y=y[maiordez]
p=9
pea=sort(findpeaks(y, npeaks=p, minpeakdistance=100,threshold=0, sortstr=FALSE)[,2])
fwhms=numeric(p)
#par(mfrow=c(2,4))
ang=numeric(p)
for(k in 1:p) {
m=pea[k]
ang[k]=m
a=theta[m]-1/2
b=theta[m]+1/2
a1=which.min(abs(a-theta))
b1=which.min(abs(b-theta))
tot=a1:b1
yt=y[tot]
tt=theta[tot]
plot(yt~tt)
# code from
# https://stackoverflow.com/questions/25015410/r-find-full-width-at-half-maximum-for-a-gausian-density-distribution
xmax <- tt[yt==max(yt)]
x1 <- tt[tt < xmax][which.min(abs(yt[tt < xmax]-max(yt)/2))]
x2 <- tt[tt > xmax][which.min(abs(yt[tt > xmax]-max(yt)/2))]
points(c(x1, x2), c(yt[tt==x1], yt[tt==x2]), col="red")
fwhms[k]=x2-x1
sigmas=fwhms/2.3548
tab1=data.frame(pea=pea,sigmas=sigmas)
kable(tab1)
}
enteiros=matrix(c(
1,	0,	0,
1,	1,	0,
1,	1,	1,
2,	0,	0,
2,	1,	0,
2,	1,	1,
2,	2,	0,
2,	2,	1,
3,	0,	0,
3,	1,	0,
3,	1,	1,
2,	2,	2,
4,  0,  0,
3,3,1,
4,0,2,
4,2,2),ncol=3,byrow=TRUE)
h=enteiros[,1]
k=enteiros[,2]
l=enteiros[,3]
scind=((h%%2 +k%%2 + l%%2) == 3) | ((h%%2 +k%%2 + l%%2) == 0)
sc=enteiros[scind,]
h=sc[,1]
k=sc[,2]
l=sc[,3]
#a=0.56402 #nm
lambda=0.15405 #ka1
picos=theta[ang]
xreg=2*sin(picos*2*pi/360)
yreg=lambda*sqrt(h^2+k^2+l^2)
mod=lm(yreg~xreg)
summary(mod)
plot(yreg~xreg)
abline(mod)
plot(yreg~xreg)
abline(mod)
y=fixo$yobs
theta=fixo$X.twotheta/2
plot(y~theta)
plot(y~theta,type='l')
library(np)
mod.np=npreg(y ~ theta, bws = 3)
npfit=fitted(mod.np)
plot(npfit~theta,type='l')
mod.np=npreg(y ~ theta, bws = 1)
npfit=fitted(mod.np)
plot(npfit~theta,type='l')
library(np)
mod.np=npreg(y ~ theta, bws = 5)
npfit=fitted(mod.np)
plot(npfit~theta,type='l')
install.packages("baseline")
library(baseline)
baseline.rollingBall(y, wm=10, ws=120)
baseline.rollingBall(y,100,120)
baseline.rollingBall(y,1,1)
baseline.rollingBall(y,1,1)
baseline.rollingBall(matrix(y,nrow=1),1,1)
matrix(y,nrow=1)
ymat=matrix(y,nrow=1)
ymat
View(ymat)
baseline.rollingBall(matrix(y,nrow=1),10,12)
res=baseline.rollingBall(matrix(y,nrow=1),10,12)
View(res)
plot(res$baseline~theta,type='l')
plot(as.numeric(res$baseline)~theta,type='l')
plot(res$corrected~theta,type='l',col='red')
plot(as.numeric(res$corrected)~theta,type='l',col='red')
res=baseline.rollingBall(matrix(y,nrow=1),50,12)
plot(as.numeric(res$baseline)~theta,type='l')
res=baseline.rollingBall(matrix(y,nrow=1),100,12)
res=baseline.rollingBall(matrix(y,nrow=1),100,12)
plot(as.numeric(res$baseline)~theta,type='l')
res=baseline.rollingBall(matrix(y,nrow=1),5,1)
res=baseline.rollingBall(matrix(y,nrow=1),5,3)
res=baseline.rollingBall(matrix(y,nrow=1),5,3)
plot(as.numeric(res$baseline)~theta,type='l')
plot(as.numeric(res$corrected)~theta,type='l',col='red')
res=baseline.rollingBall(matrix(y,nrow=1),5,50)
plot(as.numeric(res$baseline)~theta,type='l')
res=baseline.rollingBall(matrix(y,nrow=1),5,20)
plot(as.numeric(res$baseline)~theta,type='l')
plot(as.numeric(res$corrected)~theta,type='l',col='red')
plot(y-as.numeric(res$corrected)~theta)
plot((y-as.numeric(res$corrected))~theta)
plot(as.numeric(res$corrected)~theta,type='l',col='red')
plot(y~theta,type='l')
res=baseline.rollingBall(matrix(y,nrow=1),5,10)
plot(as.numeric(res$baseline)~theta,type='l')
plot(as.numeric(res$corrected)~theta,type='l',col='red')
res=baseline.rollingBall(matrix(y,nrow=1),5,10)
plot(as.numeric(res$baseline)~theta,type='l')
res=baseline.rollingBall(matrix(y,nrow=1),10,10)
res=baseline.rollingBall(matrix(y,nrow=1),10,10)
plot(as.numeric(res$baseline)~theta,type='l')
res=baseline.rollingBall(matrix(y,nrow=1),50,10)
plot(as.numeric(res$baseline)~theta,type='l')
res=baseline.rollingBall(matrix(y,nrow=1),200,10)
plot(as.numeric(res$baseline)~theta,type='l')
res=baseline.rollingBall(matrix(y,nrow=1),300,10)
plot(as.numeric(res$baseline)~theta,type='l')
plot(as.numeric(res$corrected)~theta,type='l',col='red')
res=baseline.rollingBall(matrix(y,nrow=1),300,100)
plot(as.numeric(res$baseline)~theta,type='l')
plot(as.numeric(res$corrected)~theta,type='l',col='red')
res=baseline.rollingBall(matrix(y,nrow=1),300,200)
plot(as.numeric(res$baseline)~theta,type='l')
plot(as.numeric(res$corrected)~theta,type='l',col='red')
res=baseline.rollingBall(matrix(y,nrow=1),400,300)
plot(as.numeric(res$baseline)~theta,type='l')
plot(as.numeric(res$corrected)~theta,type='l',col='red')
plot(y~theta,type='l')
plot(as.numeric(res$corrected)~theta,type='l',col='red')
lines(as.numeric(res$baseline)~theta,type='l')
plot(as.numeric(res$corrected)~theta,type='l',col='red')
lines(as.numeric(res$baseline)~theta,type='l')
res=baseline.rollingBall(matrix(y,nrow=1),100,300)
res=baseline.rollingBall(matrix(y,nrow=1),100,300)
plot(as.numeric(res$corrected)~theta,type='l',col='red')
res=baseline.rollingBall(matrix(y,nrow=1),100,300)
plot(as.numeric(res$corrected)~theta,type='l',col='red')
lines(as.numeric(res$baseline)~theta,type='l')
res=baseline.rollingBall(matrix(y,nrow=1),200,300)
plot(as.numeric(res$corrected)~theta,type='l',col='red')
lines(as.numeric(res$baseline)~theta,type='l')
plot(as.numeric(res$corrected)~theta,type='l',col='red')
plot(as.numeric(res$corrected)~theta,type='l',col='red')
lines(as.numeric(res$baseline)~theta,type='l')
res=baseline.rollingBall(matrix(y,nrow=1),200,200)
plot(as.numeric(res$corrected)~theta,type='l',col='red')
lines(as.numeric(res$baseline)~theta,type='l')
plot(log(as.numeric(res$corrected))~theta,type='l',col='red')
lines(log(as.numeric(res$baseline))~theta,type='l')
plot(sqrt(as.numeric(res$corrected))~theta,type='l',col='red')
lines(sqrt(as.numeric(res$baseline))~theta,type='l')
plot(sqrt(as.numeric(res$corrected))~theta,type='l',col='red')
lines(sqrt(as.numeric(res$baseline))~theta,type='l')
plot(sqrt(as.numeric(res$corrected))~theta,type='l',col='red')
lines(sqrt(as.numeric(res$baseline))~theta,type='l')
as.numeric(res$baseline)
plot(sqrt(as.numeric(res$corrected))~theta,type='l',col='red')
plot((y-as.numeric(res$corrected))~theta)
lines(as.numeric(res$corrected))
plot((y-as.numeric(res$corrected))~theta)
plot((y~theta)
plot((y~theta)
plot(y~theta)
lines(as.numeric(res$corrected),col='red')
lines(as.numeric(res$corrected)~theta,col='red')
plot(y~theta)
plot(y~theta)
lines(as.numeric(res$corrected)~theta,col='red')
res=baseline(matrix(y,nrow=1),method='irls')
res=baseline(matrix(y,nrow=1),method='irls')
ymat=matrix(y,nrow=1)
res=baseline(matrix(y,nrow=1),method='irls')
getBaseline(res)
base=getBaseline(res)
plot(base~theta,type='l',col='red')
theta
length(theta)
plot(as.numeric(base)~theta,type='l',col='red')
View(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines(y~theta,type='l')
plot(y~theta,type='l')
lines(as.numeric(base)~theta,type='l',col='red')
res=baseline(matrix(y,nrow=1),method='modpolyfit')
base=getBaseline(res)
plot(y~theta,type='l')
lines(as.numeric(base)~theta,type='l',col='red')
plot(y~theta,type='l')
lines(as.numeric(base)~theta,type='l',col='red')
y
plot(sqrt(y)~theta,type='l')
lines(sqrt(as.numeric(base))~theta,type='l',col='red')
plot(sqrt(y)~theta,type='l')
lines(sqrt(as.numeric(base))~theta,type='l',col='red')
res=baseline(matrix(y,nrow=1),method='modpolyfit')
base=getBaseline(res)
plot(sqrt(y)~theta,type='l')
lines(sqrt(as.numeric(base))~theta,type='l',col='red')
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
res=baseline(matrix(y,nrow=1),method='rfbaseline')
res=baseline(matrix(y,nrow=1),method='rfbaseline')
res=baseline(matrix(y,nrow=1),method='rfbaseline')
res=baseline(matrix(y,nrow=1),method='rfbaseline')
baseline(matrix(y,nrow=1),method='rfbaseline')
res=baseline(matrix(y,nrow=1),method='TAP')
res=baseline(matrix(y,nrow=1),method='TAP')
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
res=baseline(matrix(y,nrow=1),method='shirley')
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
plot(as.numeric(base)~theta,type='l',col='als')
res=baseline(matrix(y,nrow=1),method='als')
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
res=baseline(matrix(y,nrow=1),method='als',lambda=2)
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
plot(as.numeric(base)~theta,type='l',col='red')
res=baseline(matrix(y,nrow=1),method='als',lambda=10)
res=baseline(matrix(y,nrow=1),method='als',lambda=10)
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
res=baseline(matrix(y,nrow=1),method='als',lambda=8)
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
res=baseline(matrix(y,nrow=1),method='als',lambda=7)
res=baseline(matrix(y,nrow=1),method='als',lambda=7)
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
ymat=matrix(y,nrow=1)
res=baseline(matrix(y,nrow=1),method='als',lambda=8.5)
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
res=baseline(matrix(y,nrow=1),method='irls',lambda1=8)
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
ymat=matrix(y,nrow=1)
res=baseline(matrix(y,nrow=1),method='irls',lambda1=5)
base=getBaseline(res)
ymat=matrix(y,nrow=1)
res=baseline(matrix(y,nrow=1),method='irls',lambda1=5)
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
ymat=matrix(y,nrow=1)
res=baseline(matrix(y,nrow=1),method='irls',lambda1=10)
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
baselines <- spc.fit.poly.below (y)
install.packages("hyperSpec")
library(hyperspec)
baselines <- spc.fit.poly.below (y)
baselines
library(hyperSpec)
baselines <- spc.fit.poly.below (y)
res=baseline(matrix(y,nrow=1),method='modpolyfit',degree=4)
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
ymat=matrix(y,nrow=1)
res=baseline(matrix(y,nrow=1),method='modpolyfit',degree=6)
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
res=baseline(matrix(y,nrow=1),method='modpolyfit',degree=10)
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
ymat=matrix(y,nrow=1)
res=baseline(matrix(y,nrow=1),method='modpolyfit',degree=3)
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
ymat=matrix(y,nrow=1)
res=baseline(matrix(y,nrow=1),method='modpolyfit',degree=4)
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
lines((y)~theta,type='l')
plot((y)~theta,type='l')
lines(as.numeric(base)~theta,type='l',col='red')
plot((y)~theta,type='l')
lines(as.numeric(base)~theta,type='l',col='red')
plot(as.numeric(base)~theta,type='l',col='red')
plot((y)~theta,type='l')
ymat=matrix(y[theta<15],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=4)
res
base=getBaseline(res)
plot(as.numeric(base)~theta,type='l',col='red')
plot(as.numeric(base)~theta[theta<15],type='l',col='red')
plot((y)~theta[theta<15],type='l')
plot((y[theta<15])~theta[theta<15],type='l')
lines(as.numeric(base)~theta[theta<15],type='l',col='red')
plot((y[theta<15])~theta[theta<15],type='l')
lines(as.numeric(base)~theta[theta<15],type='l',col='red'
plot(y~theta)
plot(y~theta)
lines(as.numeric(res$corrected)~theta,col='red')
plot((y[theta<15])~theta[theta<15],type='l')
lines(as.numeric(base)~theta[theta<15],type='l',col='red')
plot((y[theta<15])~theta[theta<15],type='l')
lines(as.numeric(base)~theta[theta<15],type='l',col='red')
ymat=matrix(y[theta<15],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=5)
base=getBaseline(res)
plot((y[theta<15])~theta[theta<15],type='l')
lines(as.numeric(base)~theta[theta<15],type='l',col='red')
ymat=matrix(y[theta<15],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=10)
base=getBaseline(res)
plot((y[theta<15])~theta[theta<15],type='l')
lines(as.numeric(base)~theta[theta<15],type='l',col='red')
ymat=matrix(y[theta<15],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=30)
ymat=matrix(y[theta<15],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=20)
base=getBaseline(res)
plot((y[theta<15])~theta[theta<15],type='l')
lines(as.numeric(base)~theta[theta<15],type='l',col='red')
ymat=matrix(y[theta<15],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=15)
base=getBaseline(res)
plot((y[theta<15])~theta[theta<15],type='l')
lines(as.numeric(base)~theta[theta<15],type='l',col='red')
ymat=matrix(y[theta<15],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=10)
base=getBaseline(res)
plot((y[theta<15])~theta[theta<15],type='l')
lines(as.numeric(base)~theta[theta<15],type='l',col='red')
y=fixo$yobs
plot(y~theta,type='l')
ymat=matrix(y[theta<15],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=10)
base=getBaseline(res)
plot((y[theta<15])~theta[theta<15],type='l')
lines(as.numeric(base)~theta[theta<15],type='l',col='red')
ymat=matrix(y[theta<15],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=9)
base=getBaseline(res)
plot((y[theta<15])~theta[theta<15],type='l')
lines(as.numeric(base)~theta[theta<15],type='l',col='red')
ymat=matrix(y[theta<15],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=8)
base=getBaseline(res)
plot((y[theta<15])~theta[theta<15],type='l')
lines(as.numeric(base)~theta[theta<15],type='l',col='red')
ymat=matrix(y[theta<15],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=7)
base=getBaseline(res)
plot((y[theta<15])~theta[theta<15],type='l')
lines(as.numeric(base)~theta[theta<15],type='l',col='red')
ind=theta<14 & theta > 6
ymat=matrix(y[ind],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=7)
base=getBaseline(res)
ymat=matrix(y[ind],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=7)
base=getBaseline(res)
plot((y[ind])~theta[ind],type='l')
lines(as.numeric(base)~theta[ind],type='l',col='red')
ymat=matrix(y[ind],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=8)
base=getBaseline(res)
plot((y[ind])~theta[ind],type='l')
lines(as.numeric(base)~theta[ind],type='l',col='red')
res=baseline(ymat,method='modpolyfit',degree=3)
base=getBaseline(res)
plot((y[ind])~theta[ind],type='l')
res=baseline(ymat,method='modpolyfit',degree=3)
base=getBaseline(res)
plot((y[ind])~theta[ind],type='l')
lines(as.numeric(base)~theta[ind],type='l',col='red')
ymat=matrix(y[ind],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=2)
base=getBaseline(res)
plot((y[ind])~theta[ind],type='l')
lines(as.numeric(base)~theta[ind],type='l',col='red')
mat=matrix(y[ind],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=4)
base=getBaseline(res)
plot((y[ind])~theta[ind],type='l')
lines(as.numeric(base)~theta[ind],type='l',col='red')
plot(sqrt((y[ind]))~theta[ind],type='l')
lines(sqrt(abs(as.numeric(base)))~theta[ind],type='l',col='red')
ymat=matrix(y[ind],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=5)
base=getBaseline(res)
plot(sqrt((y[ind]))~theta[ind],type='l')
lines(sqrt(abs(as.numeric(base)))~theta[ind],type='l',col='red')
res=baseline(ymat,method='modpolyfit',degree=3)
base=getBaseline(res)
plot(sqrt((y[ind]))~theta[ind],type='l')
lines(sqrt(abs(as.numeric(base)))~theta[ind],type='l',col='red')
ymat=matrix(y[ind],nrow=1)
res=baseline(ymat,method='modpolyfit',degree=4)
base=getBaseline(res)
plot(sqrt((y[ind]))~theta[ind],type='l')
lines(sqrt(abs(as.numeric(base)))~theta[ind],type='l',col='red')
source('baseline/baseline.mor.R')
setwd("C:/Users/Carlos M Garcia/Google Drive/______tecnicasFES")
source('baseline/baseline.mor.R')
bl.imor      <- baseline.imor(y)                         #  I-MOR
bl.imor      <- baseline.imor(y[ind])
plot(sqrt((y[ind]))~theta[ind],type='l')
plot(sqrt((y[ind]))~theta[ind],type='l')
lines(sqrt(abs(as.numeric(bl.imor)))~theta[ind],type='l',col='red')
bl.mor       <- baseline.mor(s, mor_getwopt(y[ind]))   # si
bl.mor       <- baseline.mor(y, mor_getwopt(y[ind]))   # si
plot(sqrt((y[ind]))~theta[ind],type='l')
lines(sqrt(abs(as.numeric(bl.mor)))~theta[ind],type='l',col='red')
bl.mor       <- baseline.mor(y[ind], mor_getwopt(y[ind]))   # si
plot(sqrt((y[ind]))~theta[ind],type='l')
lines(sqrt(abs(as.numeric(bl.mor)))~theta[ind],type='l',col='red')
bl.mor       <- baseline.mor(y[ind], mor_getwopt(y[ind]))
bl.mor
plot(sqrt((y[ind]))~theta[ind],type='l')
lines(sqrt(abs(as.numeric(bl.mor)))~theta[ind],type='l',col='red')
cond_const <- read.csv("C:/Users/Carlos M Garcia/Google Drive/______tecnicasFES/foto/cond_const.txt", sep="")
View(cond_const)
knitr::opts_chunk$set(echo = TRUE)
names(cond_const)
plot(cond_const$ISC/cond_const$VSC~cond$const$VSC)
View(cond_const)
cond_const <- as.data.frame(read.csv("C:/Users/Carlos M Garcia/Google Drive/______tecnicasFES/foto/cond_const.txt", sep=""))
names(cond_const)
plot(cond_const$ISC/cond_const$VSC~cond$const$VSC)
plot(cond_const$ISC/cond_const$VSC~cond_const$VSC)
plot((cond_const$ISC/cond_const$VSC)~cond_const$VSC)
cond_const <- as.data.frame(read.csv("C:/Users/Carlos M Garcia/Google Drive/______tecnicasFES/foto/cond_const.txt", sep=""))
names(cond_const)
plot((cond_const$ISC/cond_const$VSC)~cond_const$VSC)
